/*
 * TrustyXAI
 * Trusty XAI explainability API.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: tteofili@redhat.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.kie.trusty.xai.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.kie.trusty.xai.model.DataDistribution;

/**
 * ModelInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-04T14:59:37.449+02:00")
public class ModelInfo {
  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("inputShape")
  private Integer inputShape = null;

  @SerializedName("outputShape")
  private Integer outputShape = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("version")
  private String version = null;

  /**
   * Gets or Sets taskType
   */
  @JsonAdapter(TaskTypeEnum.Adapter.class)
  public enum TaskTypeEnum {
    CLASSIFICATION("classification"),
    
    REGRESSION("regression");

    private String value;

    TaskTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaskTypeEnum fromValue(String text) {
      for (TaskTypeEnum b : TaskTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TaskTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaskTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaskTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TaskTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("taskType")
  private TaskTypeEnum taskType = null;

  @SerializedName("dataDistribution")
  private DataDistribution dataDistribution = null;

  public ModelInfo uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public ModelInfo endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @ApiModelProperty(value = "")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public ModelInfo inputShape(Integer inputShape) {
    this.inputShape = inputShape;
    return this;
  }

   /**
   * Get inputShape
   * @return inputShape
  **/
  @ApiModelProperty(value = "")
  public Integer getInputShape() {
    return inputShape;
  }

  public void setInputShape(Integer inputShape) {
    this.inputShape = inputShape;
  }

  public ModelInfo outputShape(Integer outputShape) {
    this.outputShape = outputShape;
    return this;
  }

   /**
   * Get outputShape
   * @return outputShape
  **/
  @ApiModelProperty(value = "")
  public Integer getOutputShape() {
    return outputShape;
  }

  public void setOutputShape(Integer outputShape) {
    this.outputShape = outputShape;
  }

  public ModelInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ModelInfo version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ModelInfo taskType(TaskTypeEnum taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @ApiModelProperty(value = "")
  public TaskTypeEnum getTaskType() {
    return taskType;
  }

  public void setTaskType(TaskTypeEnum taskType) {
    this.taskType = taskType;
  }

  public ModelInfo dataDistribution(DataDistribution dataDistribution) {
    this.dataDistribution = dataDistribution;
    return this;
  }

   /**
   * Get dataDistribution
   * @return dataDistribution
  **/
  @ApiModelProperty(value = "")
  public DataDistribution getDataDistribution() {
    return dataDistribution;
  }

  public void setDataDistribution(DataDistribution dataDistribution) {
    this.dataDistribution = dataDistribution;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelInfo modelInfo = (ModelInfo) o;
    return Objects.equals(this.uuid, modelInfo.uuid) &&
        Objects.equals(this.endpoint, modelInfo.endpoint) &&
        Objects.equals(this.inputShape, modelInfo.inputShape) &&
        Objects.equals(this.outputShape, modelInfo.outputShape) &&
        Objects.equals(this.name, modelInfo.name) &&
        Objects.equals(this.version, modelInfo.version) &&
        Objects.equals(this.taskType, modelInfo.taskType) &&
        Objects.equals(this.dataDistribution, modelInfo.dataDistribution);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, endpoint, inputShape, outputShape, name, version, taskType, dataDistribution);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelInfo {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    inputShape: ").append(toIndentedString(inputShape)).append("\n");
    sb.append("    outputShape: ").append(toIndentedString(outputShape)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    dataDistribution: ").append(toIndentedString(dataDistribution)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

